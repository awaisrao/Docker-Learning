Docker is a containerization platform. Developers can package their applications along with their dependencies in containers. This enables the application to run on any supported OS instance wihtout worrying about the dependent libraries and packages.

1. RUN Command
Docker run command creates and runs a container from a docker image. It supports different flags like:
 -d to run the container in dettached mode
 -p to map ports of containers to ports of host machine
 --name to name the newly created container
 -v to mount a volume of host machine to volume of container 
 -it to run container in interactive mode and access shell of that container
 --link to link a container to another container so it can be accessible and can communicate (obselete)
 --network to include this container in a network so all containers in this network will be able to communicate with one another
 --restart to restart container in case of exiting. We can also provide a number so it will try to restart that number of times instead of always
 -e to provide value to an environment variable
 
 Command: docker run -d --name my-running-app -p 3000:3000 --netowrk=backend-net --restart=always my-nodejs-app

2. PS Command
Docker ps command lists all the running containers
 -a flag lists all the running and created containers

Command: docker ps -a

3. BUILD Command
Docker build command builds an image from a dockerfile. Dockerfile contains a set of instructions that instructs docker which package should be installed.
 -t flag lets you name the container along with its tag
 
 Command: docker build -t redis-server:v1 .
 
4. EXPORT Command
Containers can be compressed and move to another machine using export command.

Command: docker export Container1 > Container1.tar

5. IMPORT Command
Exported containers in a tar file can be imported and converted into docker containers using import command.

Command: docker import Container1.tar

6. NETWORK Command
Docker network is used to create, delete, inspect etc. different networks. Different containers can be added to one or multiple networks.

Command: docker network create backend-net

7.LOGS Command
Docker tracks the Standard Out and Standard Error outputs of container. Docker logs command can be used to see the logs generated by a container.

Command: docker logs redis-server

8. STATS Command
Docker stats command is used to see how much resources a container is consuming.

Command: docker stats redis-server



